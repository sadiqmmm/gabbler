use Mix.Config

# For development, we disable any cache and enable
# debugging and code reloading.
#
# The watchers configuration can be used to run external
# watchers to your application. For example, we use it
# with webpack to recompile .js and .css sources.
config :gabbler, GabblerWeb.Endpoint,
  http: [
    port: 4000,
    protocol_options: [
      max_header_name_length: 128,
      max_header_value_length: 8192,
      max_headers: 100
    ]
  ],
  debug_errors: true,
  code_reloader: true,
  check_origin: false,
  watchers: [
    node: [
      "node_modules/webpack/bin/webpack.js",
      "--mode",
      "development",
      "--watch-stdin",
      cd: Path.expand("../assets", __DIR__)
    ]
  ]

config :gabbler_data, GabblerData.Repo,
  database: "gabbler",
  username: "gabbler",
  password: "gabbler",
  hostname: "localhost"

# CLOUDEX
config :cloudex,
  api_key: "apikey",
  secret: "apisecret",
  cloud_name: "gabblerorso"

# CAPTCHA
config :recaptcha,
  public_key: "yourkey",
  secret: "yoursecret"

# GUARDIAN AUTH/ENCRYPT
config :gabbler, Gabbler.Auth.Guardian,
  issuer: "gabbler",
  secret_key: "generatedsecretkey",
  ttl: {4, :weeks},
  verify_issuer: false,
  permissions: %{
    default: [:gabbler_web],
    authed_for: %{
      admin: 0b1
      # : 0b100,
      # : 0b1000
    }
  }

config :gabbler_data,
  ecto_repos: [GabblerData.Repo]

# ## SSL Support
#
# In order to use HTTPS in development, a self-signed
# certificate can be generated by running the following
# Mix task:
#
#     mix phx.gen.cert
#
# Note that this task requires Erlang/OTP 20 or later.
# Run `mix help phx.gen.cert` for more information.
#
# The `http:` config above can be replaced with:
#
#     https: [
#       port: 4001,
#       cipher_suite: :strong,
#       keyfile: "priv/cert/selfsigned_key.pem",
#       certfile: "priv/cert/selfsigned.pem"
#     ],
#
# If desired, both `http:` and `https:` keys can be
# configured to run both http and https servers on
# different ports.

# Watch static and templates for browser reloading.
config :gabbler, GabblerWeb.Endpoint,
  live_reload: [
    patterns: [
      ~r"priv/static/.*(js|css|png|jpeg|jpg|gif|svg)$",
      ~r"priv/gettext/.*(po)$",
      ~r"lib/gabbler_web/{live,views}/.*(ex)$",
      ~r"lib/gabbler_web/templates/.*(eex)$",
      ~r{lib/my_app_web/live/.*(ex)$}
    ]
  ]

# Do not include metadata nor timestamps in development logs
config :logger, :console, format: "[$level] $message\n"

# Set a higher stacktrace during development. Avoid configuring such
# in production as building large stacktraces may be expensive.
config :phoenix, :stacktrace_depth, 20

# Initialize plugs at runtime for faster development compilation
config :phoenix, :plug_init_mode, :runtime
